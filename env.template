# ruleIQ Environment Configuration Template
# Copy this file to .env.local for local development or .env for production
# DO NOT commit .env or .env.local files to version control

# Database Configuration
# PostgreSQL connection URL
# Format: postgresql://user:password@host:port/database
# For local development: postgresql://postgres:password@localhost:5432/ruleiq
# For production with SSL: postgresql://user:password@host:port/database?sslmode=require
DATABASE_URL=postgresql://postgres:password@localhost:5432/ruleiq

# Database Pool Configuration
# Number of connections to maintain in the pool
DB_POOL_SIZE=10

# Maximum overflow connections above pool_size
DB_MAX_OVERFLOW=20

# Number of seconds after which a connection is recycled
DB_POOL_RECYCLE=1800

# Number of seconds to wait before timing out
DB_POOL_TIMEOUT=30

# SQLAlchemy Configuration
# Enable SQL query logging (true/false) - use only for debugging
SQLALCHEMY_ECHO=false

# API Configuration
# API base URL for the backend
API_BASE_URL=http://localhost:8000

# Frontend URL
FRONTEND_URL=http://localhost:3000

# Authentication & Security
# JWT secret key - CHANGE THIS IN PRODUCTION
JWT_SECRET_KEY=your-secret-key-here-change-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# AI Service Configuration
# OpenAI API Key for AI services
OPENAI_API_KEY=your-openai-api-key-here

# AI service timeout in seconds
AI_SERVICE_TIMEOUT=120

# Maximum tokens for AI responses
AI_MAX_TOKENS=4000

# Redis Configuration (for caching and Celery)
REDIS_URL=redis://localhost:6379/0

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# File Upload Configuration
# Maximum file size in MB
MAX_FILE_SIZE_MB=50

# Allowed file extensions (comma-separated)
ALLOWED_FILE_EXTENSIONS=pdf,doc,docx,txt,csv,json,xml

# Logging Configuration
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path
LOG_FILE_PATH=logs/ruleiq.log

# Application Settings
# Environment: development, staging, production
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=false

# CORS Configuration
# Allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@example.com
SMTP_PASSWORD=your-app-password
SMTP_FROM_EMAIL=noreply@ruleiq.com

# Monitoring & Analytics
# Sentry DSN for error tracking
SENTRY_DSN=

# Analytics tracking ID
ANALYTICS_ID=

# Performance Monitoring
# Enable performance monitoring (true/false)
ENABLE_PERFORMANCE_MONITORING=false

# Feature Flags
# Enable AI caching (true/false)
ENABLE_AI_CACHE=true

# Enable quality assessment features (true/false)
ENABLE_QUALITY_ASSESSMENT=true

# Enable analytics dashboard (true/false)
ENABLE_ANALYTICS_DASHBOARD=true

# External Service URLs
# Document processing service
DOCUMENT_PROCESSOR_URL=

# Compliance database API
COMPLIANCE_DB_URL=

# Backup Configuration
# Enable automatic backups (true/false)
ENABLE_AUTO_BACKUP=false

# Backup storage path
BACKUP_STORAGE_PATH=/var/backups/ruleiq

# Rate Limiting
# Requests per minute per IP
RATE_LIMIT_PER_MINUTE=60

# Maximum concurrent requests per user
MAX_CONCURRENT_REQUESTS=10

# Testing Configuration
# Test database URL (used for pytest)
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/ruleiq_test

# Enable test mode features
ENABLE_TEST_MODE=false

# Docker Configuration (when running in containers)
# Database host (use 'db' for docker-compose)
DB_HOST=db

# Redis host (use 'redis' for docker-compose)
REDIS_HOST=redis